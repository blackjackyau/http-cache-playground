proxy_cache_path  /cache  levels=1:2    keys_zone=app_cache:10m inactive=240h  max_size=10g use_temp_path=off;
access_log /dev/stdout;
error_log /dev/stdout;

upstream application {
  server 10.0.2.2:8888;  # virtual box host ip, change to your application url, should change to the node server host
}

server {
    server_name _;
    listen 80;
    location / {
      gzip on;
      gzip_min_length 1; # 1 bytes; should be higher in production
      gzip_types
        application/atom+xml
        application/geo+json
        application/javascript
        application/x-javascript
        application/json
        application/ld+json
        application/manifest+json
        application/rdf+xml
        application/rss+xml
        application/xhtml+xml
        application/xml
        font/eot
        font/otf
        font/ttf
        image/svg+xml
        text/css
        text/javascript
        text/plain
        text/xml;

      add_header X-Cache-Status $upstream_cache_status;
      proxy_pass             http://application;
      # https://www.nginx.com/blog/nginx-caching-guide/#Fine%E2%80%91Tuning-the-Cache-and-Improving-Performance
      proxy_cache_revalidate on;
      proxy_cache_min_uses 1; # how many occurance for to cache
      proxy_cache_lock on;
      proxy_set_header       Host $host;
      proxy_buffering        on;
      proxy_cache            app_cache;
      proxy_cache_methods    GET HEAD;
      # proxy_cache_key $scheme$proxy_host$request_uri; // default

      #proxy_cache_valid      200  360d; # should honour header
      proxy_cache_use_stale  error timeout invalid_header updating
                              http_500 http_502 http_503 http_504;

      header_filter_by_lua_block {
        local exp_header_var = "date,x-cache-status,access-control-expose-headers,content-encoding,"
        for key, value in pairs(ngx.resp.get_headers()) do
          --ngx.log(ngx.STDERR, "key: ", key, " | value: ", value)
          exp_header_var = exp_header_var .. key .. ","
        end
        ngx.log(ngx.STDERR, exp_header_var)
        ngx.header['Access-Control-Expose-Headers'] = exp_header_var
      }
    }
}